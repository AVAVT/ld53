//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyTurnListenerComponent anyTurnListener { get { return (AnyTurnListenerComponent)GetComponent(GameComponentsLookup.AnyTurnListener); } }
    public bool hasAnyTurnListener { get { return HasComponent(GameComponentsLookup.AnyTurnListener); } }

    public void AddAnyTurnListener(System.Collections.Generic.List<IAnyTurnListener> newValue) {
        var index = GameComponentsLookup.AnyTurnListener;
        var component = (AnyTurnListenerComponent)CreateComponent(index, typeof(AnyTurnListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyTurnListener(System.Collections.Generic.List<IAnyTurnListener> newValue) {
        var index = GameComponentsLookup.AnyTurnListener;
        var component = (AnyTurnListenerComponent)CreateComponent(index, typeof(AnyTurnListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyTurnListener() {
        RemoveComponent(GameComponentsLookup.AnyTurnListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyTurnListener;

    public static Entitas.IMatcher<GameEntity> AnyTurnListener {
        get {
            if (_matcherAnyTurnListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyTurnListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyTurnListener = matcher;
            }

            return _matcherAnyTurnListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyTurnListener(IAnyTurnListener value) {
        var listeners = hasAnyTurnListener
            ? anyTurnListener.value
            : new System.Collections.Generic.List<IAnyTurnListener>();
        listeners.Add(value);
        ReplaceAnyTurnListener(listeners);
    }

    public void RemoveAnyTurnListener(IAnyTurnListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyTurnListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyTurnListener();
        } else {
            ReplaceAnyTurnListener(listeners);
        }
    }
}
