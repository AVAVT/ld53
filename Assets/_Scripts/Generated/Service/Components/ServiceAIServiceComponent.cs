//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity aIServiceEntity { get { return GetGroup(ServiceMatcher.AIService).GetSingleEntity(); } }
    public AIServiceComponent aIService { get { return aIServiceEntity.aIService; } }
    public bool hasAIService { get { return aIServiceEntity != null; } }

    public ServiceEntity SetAIService(IAiService newInstance) {
        if (hasAIService) {
            throw new Entitas.EntitasException("Could not set AIService!\n" + this + " already has an entity with AIServiceComponent!",
                "You should check if the context already has a aIServiceEntity before setting it or use context.ReplaceAIService().");
        }
        var entity = CreateEntity();
        entity.AddAIService(newInstance);
        return entity;
    }

    public void ReplaceAIService(IAiService newInstance) {
        var entity = aIServiceEntity;
        if (entity == null) {
            entity = SetAIService(newInstance);
        } else {
            entity.ReplaceAIService(newInstance);
        }
    }

    public void RemoveAIService() {
        aIServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public AIServiceComponent aIService { get { return (AIServiceComponent)GetComponent(ServiceComponentsLookup.AIService); } }
    public bool hasAIService { get { return HasComponent(ServiceComponentsLookup.AIService); } }

    public void AddAIService(IAiService newInstance) {
        var index = ServiceComponentsLookup.AIService;
        var component = (AIServiceComponent)CreateComponent(index, typeof(AIServiceComponent));
        component.Instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceAIService(IAiService newInstance) {
        var index = ServiceComponentsLookup.AIService;
        var component = (AIServiceComponent)CreateComponent(index, typeof(AIServiceComponent));
        component.Instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveAIService() {
        RemoveComponent(ServiceComponentsLookup.AIService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherAIService;

    public static Entitas.IMatcher<ServiceEntity> AIService {
        get {
            if (_matcherAIService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.AIService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherAIService = matcher;
            }

            return _matcherAIService;
        }
    }
}
