//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity sceneManagerServiceEntity { get { return GetGroup(ServiceMatcher.SceneManagerService).GetSingleEntity(); } }
    public SceneManagerServiceComponent sceneManagerService { get { return sceneManagerServiceEntity.sceneManagerService; } }
    public bool hasSceneManagerService { get { return sceneManagerServiceEntity != null; } }

    public ServiceEntity SetSceneManagerService(ISceneManagerService newInstance) {
        if (hasSceneManagerService) {
            throw new Entitas.EntitasException("Could not set SceneManagerService!\n" + this + " already has an entity with SceneManagerServiceComponent!",
                "You should check if the context already has a sceneManagerServiceEntity before setting it or use context.ReplaceSceneManagerService().");
        }
        var entity = CreateEntity();
        entity.AddSceneManagerService(newInstance);
        return entity;
    }

    public void ReplaceSceneManagerService(ISceneManagerService newInstance) {
        var entity = sceneManagerServiceEntity;
        if (entity == null) {
            entity = SetSceneManagerService(newInstance);
        } else {
            entity.ReplaceSceneManagerService(newInstance);
        }
    }

    public void RemoveSceneManagerService() {
        sceneManagerServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public SceneManagerServiceComponent sceneManagerService { get { return (SceneManagerServiceComponent)GetComponent(ServiceComponentsLookup.SceneManagerService); } }
    public bool hasSceneManagerService { get { return HasComponent(ServiceComponentsLookup.SceneManagerService); } }

    public void AddSceneManagerService(ISceneManagerService newInstance) {
        var index = ServiceComponentsLookup.SceneManagerService;
        var component = (SceneManagerServiceComponent)CreateComponent(index, typeof(SceneManagerServiceComponent));
        component.Instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceSceneManagerService(ISceneManagerService newInstance) {
        var index = ServiceComponentsLookup.SceneManagerService;
        var component = (SceneManagerServiceComponent)CreateComponent(index, typeof(SceneManagerServiceComponent));
        component.Instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneManagerService() {
        RemoveComponent(ServiceComponentsLookup.SceneManagerService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherSceneManagerService;

    public static Entitas.IMatcher<ServiceEntity> SceneManagerService {
        get {
            if (_matcherSceneManagerService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.SceneManagerService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherSceneManagerService = matcher;
            }

            return _matcherSceneManagerService;
        }
    }
}
