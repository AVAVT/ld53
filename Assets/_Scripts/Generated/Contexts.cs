//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ContextsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts : Entitas.IContexts {

    public static Contexts sharedInstance {
        get {
            if (_sharedInstance == null) {
                _sharedInstance = new Contexts();
            }

            return _sharedInstance;
        }
        set { _sharedInstance = value; }
    }

    static Contexts _sharedInstance;

    public ConfigContext config { get; set; }
    public GameContext game { get; set; }
    public GameEventContext gameEvent { get; set; }
    public InputContext input { get; set; }
    public ServiceContext service { get; set; }

    public Entitas.IContext[] allContexts { get { return new Entitas.IContext [] { config, game, gameEvent, input, service }; } }

    public Contexts() {
        config = new ConfigContext();
        game = new GameContext();
        gameEvent = new GameEventContext();
        input = new InputContext();
        service = new ServiceContext();

        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );

        foreach (var postConstructor in postConstructors) {
            postConstructor.Invoke(this, null);
        }
    }

    public void Reset() {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++) {
            contexts[i].Reset();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EntityIndexGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

    public const string DroneHoldingDroneId = "DroneHoldingDroneId";
    public const string DroneHoldingPackageId = "DroneHoldingPackageId";
    public const string EntityId = "EntityId";
    public const string EntityPrefabLinkConfig = "EntityPrefabLinkConfig";
    public const string PackageMapPositionEntityIndex = "PackageMapPositionEntityIndex";
    public const string Tile = "Tile";

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices() {
        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, int>(
            DroneHoldingDroneId,
            game.GetGroup(GameMatcher.DroneHolding),
            (e, c) => ((DroneHoldingComponent)c).droneId));

        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, int>(
            DroneHoldingPackageId,
            game.GetGroup(GameMatcher.DroneHolding),
            (e, c) => ((DroneHoldingComponent)c).packageId));

        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, int>(
            EntityId,
            game.GetGroup(GameMatcher.EntityId),
            (e, c) => ((EntityIdComponent)c).Value));

        config.AddEntityIndex(new Entitas.PrimaryEntityIndex<ConfigEntity, int>(
            EntityPrefabLinkConfig,
            config.GetGroup(ConfigMatcher.EntityPrefabLinkConfig),
            (e, c) => ((EntityPrefabLinkConfigComponent)c).KeyComponentIndex));

        game.AddEntityIndex(new PackageMapPositionEntityIndex(game));

        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, UnityEngine.Vector2Int>(
            Tile,
            game.GetGroup(GameMatcher.Tile),
            (e, c) => ((TileComponent)c).Position));
    }
}

public static class ContextsExtensions {

    public static GameEntity GetEntityWithDroneHoldingDroneId(this GameContext context, int droneId) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, int>)context.GetEntityIndex(Contexts.DroneHoldingDroneId)).GetEntity(droneId);
    }

    public static GameEntity GetEntityWithDroneHoldingPackageId(this GameContext context, int packageId) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, int>)context.GetEntityIndex(Contexts.DroneHoldingPackageId)).GetEntity(packageId);
    }

    public static GameEntity GetEntityWithEntityId(this GameContext context, int Value) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, int>)context.GetEntityIndex(Contexts.EntityId)).GetEntity(Value);
    }

    public static ConfigEntity GetEntityWithEntityPrefabLinkConfig(this ConfigContext context, int KeyComponentIndex) {
        return ((Entitas.PrimaryEntityIndex<ConfigEntity, int>)context.GetEntityIndex(Contexts.EntityPrefabLinkConfig)).GetEntity(KeyComponentIndex);
    }

    public static System.Collections.Generic.HashSet<GameEntity> GetPackagesAtPosition(this GameContext context, UnityEngine.Vector2Int position) {
        return ((PackageMapPositionEntityIndex)(context.GetEntityIndex(Contexts.PackageMapPositionEntityIndex))).GetPackagesAtPosition(position);
    }


    public static GameEntity GetEntityWithTile(this GameContext context, UnityEngine.Vector2Int Position) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, UnityEngine.Vector2Int>)context.GetEntityIndex(Contexts.Tile)).GetEntity(Position);
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.VisualDebugging.CodeGeneration.Plugins.ContextObserverGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContextObservers() {
        try {
            CreateContextObserver(config);
            CreateContextObserver(game);
            CreateContextObserver(gameEvent);
            CreateContextObserver(input);
            CreateContextObserver(service);
        } catch(System.Exception) {
        }
    }

    public void CreateContextObserver(Entitas.IContext context) {
        if (UnityEngine.Application.isPlaying) {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }

#endif
}
