//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity gameplayConfigEntity { get { return GetGroup(ConfigMatcher.GameplayConfig).GetSingleEntity(); } }
    public GameplayConfigComponent gameplayConfig { get { return gameplayConfigEntity.gameplayConfig; } }
    public bool hasGameplayConfig { get { return gameplayConfigEntity != null; } }

    public ConfigEntity SetGameplayConfig(GameplayConfigModel newValue) {
        if (hasGameplayConfig) {
            throw new Entitas.EntitasException("Could not set GameplayConfig!\n" + this + " already has an entity with GameplayConfigComponent!",
                "You should check if the context already has a gameplayConfigEntity before setting it or use context.ReplaceGameplayConfig().");
        }
        var entity = CreateEntity();
        entity.AddGameplayConfig(newValue);
        return entity;
    }

    public void ReplaceGameplayConfig(GameplayConfigModel newValue) {
        var entity = gameplayConfigEntity;
        if (entity == null) {
            entity = SetGameplayConfig(newValue);
        } else {
            entity.ReplaceGameplayConfig(newValue);
        }
    }

    public void RemoveGameplayConfig() {
        gameplayConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public GameplayConfigComponent gameplayConfig { get { return (GameplayConfigComponent)GetComponent(ConfigComponentsLookup.GameplayConfig); } }
    public bool hasGameplayConfig { get { return HasComponent(ConfigComponentsLookup.GameplayConfig); } }

    public void AddGameplayConfig(GameplayConfigModel newValue) {
        var index = ConfigComponentsLookup.GameplayConfig;
        var component = (GameplayConfigComponent)CreateComponent(index, typeof(GameplayConfigComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameplayConfig(GameplayConfigModel newValue) {
        var index = ConfigComponentsLookup.GameplayConfig;
        var component = (GameplayConfigComponent)CreateComponent(index, typeof(GameplayConfigComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameplayConfig() {
        RemoveComponent(ConfigComponentsLookup.GameplayConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherGameplayConfig;

    public static Entitas.IMatcher<ConfigEntity> GameplayConfig {
        get {
            if (_matcherGameplayConfig == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.GameplayConfig);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherGameplayConfig = matcher;
            }

            return _matcherGameplayConfig;
        }
    }
}
